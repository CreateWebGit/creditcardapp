[{"/Users/kajan/creditcardapp/src/index.js":"1","/Users/kajan/creditcardapp/src/App.js":"2","/Users/kajan/creditcardapp/src/reportWebVitals.js":"3","/Users/kajan/creditcardapp/src/components/flippable-card.js":"4","/Users/kajan/creditcardapp/src/components/cardform.js":"5","/Users/kajan/creditcardapp/src/components/card/card.js":"6"},{"size":535,"mtime":1677512042092,"results":"7","hashOfConfig":"8"},{"size":1894,"mtime":1677512276469,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1677512042094,"results":"10","hashOfConfig":"8"},{"size":1998,"mtime":1677512579587,"results":"11","hashOfConfig":"8"},{"size":4127,"mtime":1677512579568,"results":"12","hashOfConfig":"8"},{"size":4090,"mtime":1677513421066,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b0djjj",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/Users/kajan/creditcardapp/src/index.js",[],[],"/Users/kajan/creditcardapp/src/App.js",[],[],"/Users/kajan/creditcardapp/src/reportWebVitals.js",[],[],"/Users/kajan/creditcardapp/src/components/flippable-card.js",["35","36","37"],[],"import './flippable-card.css';\nimport Card from './card/card';\nimport { CSSTransition } from 'react-transition-group';\nimport { useState, useEffect } from 'react';\n\nfunction FlippableCard(props) {\n\tconst [showFront, setShowFront] = useState(true);\n\t//alert(props.oncardBackside);\n\n\tuseEffect(() => {\n\t\tif (props.onCardNumberFocus == true) {\n\t\t\tsetShowFront(false);\n\t\t} else {\n\t\t\tsetShowFront(true);\n\t\t}\n\t});\n\tconst [focus, setFocus] = useState();\n\tuseEffect(() => {\n\t\tif (props.onFocus === 'hej') {\n\t\t\tsetFocus('hej');\n\t\t}\n\t});\n\treturn (\n\t\t<>\n\t\t\t{showFront ? (\n\t\t\t\t<div className=\"flippable-card-container\">\n\t\t\t\t\t<CSSTransition in={true} timeout={300} classNames=\"flip\">\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tonCardNumber={props.onCardNumber}\n\t\t\t\t\t\t\tonCardNumberFocus={props.onCardNumberFocus}\n\t\t\t\t\t\t\tonFocusNumber={props.onFocusNumber}\n\t\t\t\t\t\t\tonFocusName={props.onFocusName}\n\t\t\t\t\t\t\tonFocusMonth={props.onFocusMonth}\n\t\t\t\t\t\t\tonFocusYear={props.onFocusYear}\n\t\t\t\t\t\t\tonFocusCCV={props.onFocusCCV}\n\t\t\t\t\t\t\tonCardName={props.onCardName}\n\t\t\t\t\t\t\tonCardMonth={props.onCardMonth}\n\t\t\t\t\t\t\tonCardYear={props.onCardYear}\n\t\t\t\t\t\t\tonCardCCV={props.onCardCCV}\n\t\t\t\t\t\t\tonFocus={focus}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetShowFront(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"flippable-card-container\">\n\t\t\t\t\t<CSSTransition in={false} timeout={300} classNames=\"flip\">\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tonCardNumber={props.onCardNumber}\n\t\t\t\t\t\t\tonCardNumberFocus={props.onCardNumberFocus}\n\t\t\t\t\t\t\tonFocusNumber={props.onFocusNumber}\n\t\t\t\t\t\t\tonFocusName={props.onFocusName}\n\t\t\t\t\t\t\tonFocusMonth={props.onFocusMonth}\n\t\t\t\t\t\t\tonFocusYear={props.onFocusYear}\n\t\t\t\t\t\t\tonFocusCVV={props.onFocusCVV}\n\t\t\t\t\t\t\tonCardName={props.onCardName}\n\t\t\t\t\t\t\tonCardMonth={props.onCardMonth}\n\t\t\t\t\t\t\tonCardYear={props.onCardYear}\n\t\t\t\t\t\t\tonCardCCV={props.onCardCCV}\n\t\t\t\t\t\t\tonFocus={focus}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetShowFront(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default FlippableCard;\n","/Users/kajan/creditcardapp/src/components/cardform.js",["38","39","40","41","42","43","44","45","46","47","48"],[],"import { useState, useEffect } from 'react';\nimport './cardform.css';\nimport Cardlist from './card/card';\n\nfunction CardForm({\n\tonCardNumber,\n\tonCardNumberFocus,\n\tonFocusNumber,\n\tonFocusName,\n\tonFocusMonth,\n\tonFocusYear,\n\tonFocusCCV,\n\tonFocus,\n\tonCardName,\n\tonCardMonth,\n\tonCardYear,\n\tonCardCCV,\n\tmycardBackside,\n\tonClick,\n\tprops,\n}) {\n\tconst [cardNumber, setCardNumber] = useState();\n\tconst [cardNumberFocus, setCardNumberFocus] = useState(false);\n\tconst [cardName, setCardName] = useState();\n\tconst [cardMonth, setCardMonth] = useState();\n\tconst [cardYear, setCardYear] = useState();\n\tconst [cardCCV, setCardCCV] = useState();\n\n\tconst [val, setVal] = useState('');\n\n\tfunction cc_format(value) {\n\t\tconst v = value\n\t\t\t.replace(/\\s+/g, '')\n\t\t\t.replace(/[^0-9]/gi, '')\n\t\t\t.substr(0, 16);\n\t\tconst parts = [];\n\n\t\tfor (let i = 0; i < v.length; i += 4) {\n\t\t\tparts.push(v.substr(i, 4));\n\t\t}\n\n\t\treturn parts.length > 1 ? parts.join(' ') : value;\n\t}\n\n\tconst onCardNumberInput = e => {\n\t\tonCardNumber(val);\n\t\tsetVal(e.target.value);\n\t};\n\n\tconst onCardInputFocusNumber = () => {\n\t\tonCardNumberFocus(false);\n\t\tonFocusNumber(true);\n\t};\n\n\tconst onCardInputFocusName = () => {\n\t\tonCardNumberFocus(false);\n\t\tonFocusName(true);\n\t};\n\n\tconst onCardInputFocusMonth = () => {\n\t\tonCardNumberFocus(false);\n\t\tonFocusMonth(true);\n\t};\n\n\tconst onCardInputFocusYear = () => {\n\t\tonCardNumberFocus(false);\n\t\tonFocusYear(true);\n\t};\n\n\tconst onCardInputFocusCVV = () => {\n\t\tonCardNumberFocus(true);\n\t\tonFocusCCV(true);\n\t};\n\n\tconst onCardNameInput = e => {\n\t\tonCardName(e.target.value);\n\t};\n\n\tconst onCardMonthSelect = e => {\n\t\tonCardMonth(e.target.value);\n\t};\n\n\tconst onCardYearSelect = e => {\n\t\tonCardYear(e.target.value);\n\t};\n\n\tconst onCardCCVInput = e => {\n\t\tonCardCCV(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"cardFormContainer\">\n\t\t\t<div className=\"cardFormContent\">\n\t\t\t\t<div className=\"inputTitle\">Card Number</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t//value={cardNumber}\n\t\t\t\t\tvalue={cc_format(val)}\n\t\t\t\t\tonChange={onCardNumberInput}\n\t\t\t\t\tonFocus={onCardInputFocusNumber}\n\t\t\t\t\tonBlur={onFocusNumber(false)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"inputTitle\">Card Name</div>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\tvalue={cardName}\n\t\t\t\t\tonChange={onCardNameInput}\n\t\t\t\t\tonFocus={onCardInputFocusName}\n\t\t\t\t\tonBlur={onFocusName(false)}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t/>\n\t\t\t\t<div className=\"cardDateContainer\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"inputTitle\">Expiration Date</div>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname=\"month\"\n\t\t\t\t\t\t\tclassName=\"inputMonth\"\n\t\t\t\t\t\t\tvalue={cardMonth}\n\t\t\t\t\t\t\tonChange={onCardMonthSelect}\n\t\t\t\t\t\t\tonFocus={onCardInputFocusMonth}\n\t\t\t\t\t\t\tonBlur={onFocusMonth(false)}>\n\t\t\t\t\t\t\t<option value=\"month\">Month</option>\n\t\t\t\t\t\t\t<option value=\"01\">01</option>\n\t\t\t\t\t\t\t<option value=\"02\">02</option>\n\t\t\t\t\t\t\t<option value=\"03\">03</option>\n\t\t\t\t\t\t\t<option value=\"04\">04</option>\n\t\t\t\t\t\t\t<option value=\"05\">05</option>\n\t\t\t\t\t\t\t<option value=\"06\">06</option>\n\t\t\t\t\t\t\t<option value=\"07\">07</option>\n\t\t\t\t\t\t\t<option value=\"08\">08</option>\n\t\t\t\t\t\t\t<option value=\"09\">09</option>\n\t\t\t\t\t\t\t<option value=\"10\">10</option>\n\t\t\t\t\t\t\t<option value=\"11\">11</option>\n\t\t\t\t\t\t\t<option value=\"12\">12</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tname=\"Year\"\n\t\t\t\t\t\t\tclassName=\"inputYear\"\n\t\t\t\t\t\t\tvalue={cardYear}\n\t\t\t\t\t\t\tonChange={onCardYearSelect}\n\t\t\t\t\t\t\tonFocus={onCardInputFocusYear}\n\t\t\t\t\t\t\tonBlur={onFocusYear(false)}>\n\t\t\t\t\t\t\t<option value=\"year\">Year</option>\n\t\t\t\t\t\t\t<option value=\"23\">2023</option>\n\t\t\t\t\t\t\t<option value=\"24\">2024</option>\n\t\t\t\t\t\t\t<option value=\"25\">2025</option>\n\t\t\t\t\t\t\t<option value=\"26\">2026</option>\n\t\t\t\t\t\t\t<option value=\"27\">2027</option>\n\t\t\t\t\t\t\t<option value=\"28\">2028</option>\n\t\t\t\t\t\t\t<option value=\"29\">2029</option>\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className=\"inputTitle\">CVV</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t//value={searchTerm}\n\t\t\t\t\t\t\t//onChange={onSearchInput}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tonChange={onCardCCVInput}\n\t\t\t\t\t\t\tonFocus={onCardInputFocusCVV}\n\t\t\t\t\t\t\tonBlur={onFocusCCV(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default CardForm;\n","/Users/kajan/creditcardapp/src/components/card/card.js",["49","50","51","52","53","54","55","56","57","58","59"],[],"import { useState, useEffect, useRef } from 'react';\nimport './card.css';\nimport './flip-transition.css';\nimport Cardlist from '../cardform';\nimport background from './images/credit.jpeg';\nimport backgroundChip from './images/chip.jpg';\nimport MasterCard from './images/mastercard.png';\nimport Visa from './images/visa.png';\nimport Discover from './images/discover.png';\nimport { logDOM } from '@testing-library/react';\n\nfunction Card({\n\tonClick,\n\tonCardNumber,\n\tonFocusNumber,\n\tonFocusName,\n\tonFocusMonth,\n\tonFocusYear,\n\tonFocusCCV,\n\tonCardName,\n\tonCardMonth,\n\tonCardYear,\n\tonCardCCV,\n\tonFocus,\n}) {\n\tconst [myfocus, setMyfocus] = useState('1');\n\tconst [mystyle, setMystyle] = useState({});\n\tconst [creditcard, setCreditcard] = useState();\n\n\tfunction getCreditCardType(accountNumber) {\n\t\t//start without knowing the credit card type\n\t\tvar result;\n\n\t\t//first check for MasterCard\n\t\tif (/^5[1-5]/.test(accountNumber)) {\n\t\t\tresult = 'mastercard';\n\t\t\tsetCreditcard('mastercard');\n\t\t}\n\n\t\t//then check for Visa\n\t\telse if (/^4/.test(accountNumber)) {\n\t\t\tresult = 'visa';\n\t\t\tsetCreditcard('visa');\n\t\t}\n\n\t\t//then check for AmEx\n\t\telse if (/^3[47]/.test(accountNumber)) {\n\t\t\tresult = 'amex';\n\t\t\tsetCreditcard('amex');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tlet logo;\n\tif (creditcard == 'mastercard') {\n\t\tlogo = <img src={MasterCard} height=\"40\" width=\"50\" />;\n\t} else if (creditcard == 'visa') {\n\t\tlogo = <img src={Visa} height=\"40\" width=\"50\" />;\n\t} else if (creditcard == 'amex') {\n\t\tlogo = <img src={Discover} height=\"40\" width=\"50\" />;\n\t}\n\n\tuseEffect(() => {\n\t\tconsole.log(getCreditCardType(onCardNumber));\n\t\t//alert(onCardNumber);\n\t\t//GetCardType({ onCardNumber });\n\t\tif (onFocusNumber === true) {\n\t\t\tsetMyfocus('2');\n\t\t\tsetMystyle({\n\t\t\t\tmarginTop: '88px',\n\t\t\t\tmarginLeft: '50px',\n\t\t\t\twidth: '200px',\n\t\t\t\theight: '30px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\t\t} else if (onFocusName === true) {\n\t\t\tsetMyfocus('3');\n\t\t\tsetMystyle({\n\t\t\t\tmarginTop: '155px',\n\t\t\t\tmarginLeft: '10px',\n\t\t\t\twidth: '90px',\n\t\t\t\theight: '45px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\t\t} else if (onFocusMonth === true) {\n\t\t\tsetMyfocus('3');\n\t\t\tsetMystyle({\n\t\t\t\tmarginTop: '155px',\n\t\t\t\tmarginLeft: '220px',\n\t\t\t\twidth: '70px',\n\t\t\t\theight: '45px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\t\t} else if (onFocusYear === true) {\n\t\t\tsetMyfocus('3');\n\t\t\tsetMystyle({\n\t\t\t\tmarginTop: '155px',\n\t\t\t\tmarginLeft: '220px',\n\t\t\t\twidth: '70px',\n\t\t\t\theight: '45px',\n\t\t\t\topacity: 1,\n\t\t\t});\n\t\t} else if (onFocusCCV === true) {\n\t\t\tsetMyfocus('3');\n\t\t\tsetMystyle({\n\t\t\t\tmarginTop: '0px',\n\t\t\t\tmarginLeft: '50px',\n\t\t\t\twidth: '200px',\n\t\t\t\theight: '100px',\n\t\t\t\topacity: 0,\n\t\t\t});\n\t\t}\n\t});\n\n\treturn (\n\t\t<div className=\"card\" onClick={onClick}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${background})`,\n\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t}}\n\t\t\t\tclassName=\"card-back\">\n\t\t\t\t<div className=\"card-back-top\"></div>\n\t\t\t\t<div className=\"card-back-ccv\">\n\t\t\t\t\t<div className=\"card-back-ccv-title\">ccv</div>\n\t\t\t\t\t<div className=\"card-back-ccv-number\">{onCardCCV}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-back-loggo\">{logo}</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tbackgroundImage: `url(${background})`,\n\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t}}\n\t\t\t\tclassName=\"card-front\">\n\t\t\t\t<div className=\"focusContainer\" style={mystyle}></div>\n\t\t\t\t<div className=\"card-front-top\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url(${backgroundChip})`,\n\t\t\t\t\t\t\tbackgroundRepeat: 'no-repeat',\n\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"card-front-chip\"></div>\n\n\t\t\t\t\t<div className=\"card-front-logo\">{logo}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"card-front-midle\">{onCardNumber}</div>\n\t\t\t\t<div className=\"card-front-bottom\">\n\t\t\t\t\t<div className=\"cardHolderContainer\">\n\t\t\t\t\t\t<div className=\"cardHolderTitle\">Card Holder</div>\n\t\t\t\t\t\t<div className=\"cardHolderName\">{onCardName}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"expiresContainer\">\n\t\t\t\t\t\t<div className=\"cardHolderTitle\">Expires</div>\n\t\t\t\t\t\t<div className=\"expiresNumber\">\n\t\t\t\t\t\t\t{onCardMonth} / {onCardYear}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n",{"ruleId":"60","severity":1,"message":"61","line":10,"column":2,"nodeType":"62","endLine":10,"endColumn":11,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":11,"column":31,"nodeType":"66","messageId":"67","endLine":11,"endColumn":33},{"ruleId":"60","severity":1,"message":"68","line":18,"column":2,"nodeType":"62","endLine":18,"endColumn":11,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":20,"nodeType":"62","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"70","severity":1,"message":"73","line":3,"column":8,"nodeType":"62","messageId":"72","endLine":3,"endColumn":16},{"ruleId":"70","severity":1,"message":"74","line":22,"column":9,"nodeType":"62","messageId":"72","endLine":22,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":22,"column":21,"nodeType":"62","messageId":"72","endLine":22,"endColumn":34},{"ruleId":"70","severity":1,"message":"76","line":23,"column":9,"nodeType":"62","messageId":"72","endLine":23,"endColumn":24},{"ruleId":"70","severity":1,"message":"77","line":23,"column":26,"nodeType":"62","messageId":"72","endLine":23,"endColumn":44},{"ruleId":"70","severity":1,"message":"78","line":24,"column":19,"nodeType":"62","messageId":"72","endLine":24,"endColumn":30},{"ruleId":"70","severity":1,"message":"79","line":25,"column":20,"nodeType":"62","messageId":"72","endLine":25,"endColumn":32},{"ruleId":"70","severity":1,"message":"80","line":26,"column":19,"nodeType":"62","messageId":"72","endLine":26,"endColumn":30},{"ruleId":"70","severity":1,"message":"81","line":27,"column":9,"nodeType":"62","messageId":"72","endLine":27,"endColumn":16},{"ruleId":"70","severity":1,"message":"82","line":27,"column":18,"nodeType":"62","messageId":"72","endLine":27,"endColumn":28},{"ruleId":"70","severity":1,"message":"83","line":1,"column":31,"nodeType":"62","messageId":"72","endLine":1,"endColumn":37},{"ruleId":"70","severity":1,"message":"73","line":4,"column":8,"nodeType":"62","messageId":"72","endLine":4,"endColumn":16},{"ruleId":"70","severity":1,"message":"84","line":10,"column":10,"nodeType":"62","messageId":"72","endLine":10,"endColumn":16},{"ruleId":"70","severity":1,"message":"85","line":26,"column":9,"nodeType":"62","messageId":"72","endLine":26,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":56,"column":17,"nodeType":"66","messageId":"67","endLine":56,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":57,"column":10,"nodeType":"88","endLine":57,"endColumn":57},{"ruleId":"64","severity":1,"message":"65","line":58,"column":24,"nodeType":"66","messageId":"67","endLine":58,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":59,"column":10,"nodeType":"88","endLine":59,"endColumn":51},{"ruleId":"64","severity":1,"message":"65","line":60,"column":24,"nodeType":"66","messageId":"67","endLine":60,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":61,"column":10,"nodeType":"88","endLine":61,"endColumn":55},{"ruleId":"60","severity":1,"message":"89","line":64,"column":2,"nodeType":"62","endLine":64,"endColumn":11,"suggestions":"90"},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setShowFront'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.onCardNumberFocus] as a second argument to the useEffect Hook.","Identifier",["91"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect contains a call to 'setFocus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.onFocus] as a second argument to the useEffect Hook.",["92"],"no-unused-vars","'useEffect' is defined but never used.","unusedVar","'Cardlist' is defined but never used.","'cardNumber' is assigned a value but never used.","'setCardNumber' is assigned a value but never used.","'cardNumberFocus' is assigned a value but never used.","'setCardNumberFocus' is assigned a value but never used.","'setCardName' is assigned a value but never used.","'setCardMonth' is assigned a value but never used.","'setCardYear' is assigned a value but never used.","'cardCCV' is assigned a value but never used.","'setCardCCV' is assigned a value but never used.","'useRef' is defined but never used.","'logDOM' is defined but never used.","'myfocus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect contains a call to 'setMyfocus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [onCardNumber, onFocusNumber, onFocusName, onFocusMonth, onFocusYear, onFocusCCV] as a second argument to the useEffect Hook.",["93"],{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Add dependencies array: [props.onCardNumberFocus]",{"range":"100","text":"101"},"Add dependencies array: [props.onFocus]",{"range":"102","text":"103"},"Add dependencies array: [onCardNumber, onFocusNumber, onFocusName, onFocusMonth, onFocusYear, onFocusCCV]",{"range":"104","text":"105"},[405,405],", [props.onCardNumberFocus]",[525,525],", [props.onFocus]",[2568,2568],", [onCardNumber, onFocusNumber, onFocusName, onFocusMonth, onFocusYear, onFocusCCV]"]